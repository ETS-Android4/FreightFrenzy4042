Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1629271676534)
+++ b/.idea/misc.xml	(date 1629271676534)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="11" project-jdk-type="JavaSDK" />
+</project>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1629271676601)
+++ b/.idea/compiler.xml	(date 1629271676601)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="11" />
+  </component>
+</project>
\ No newline at end of file
Index: build.common.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * build.common.gradle\r\n *\r\n * Try to avoid editing this file, as it may be updated from time to time as the FTC SDK\r\n * evolves. Rather, if it is necessary to customize the build process, do those edits in\r\n * the build.gradle file in TeamCode.\r\n *\r\n * This file contains the necessary content of the 'build.gradle' files for robot controller\r\n * applications built using the FTC SDK. Each individual 'build.gradle' in those applications\r\n * can simply contain the one line:\r\n *\r\n *      apply from: '../build.common.gradle'\r\n *\r\n * which will pick up this file here. This approach allows makes it easier to integrate\r\n * updates to the FTC SDK into your code.\r\n */\r\n\r\nimport java.util.regex.Pattern\r\n\r\napply plugin: 'com.android.application'\r\n\r\nandroid {\r\n\r\n    compileSdkVersion 29\r\n\r\n    signingConfigs {\r\n        release {\r\n            def apkStoreFile = System.getenv(\"APK_SIGNING_STORE_FILE\")\r\n            if (apkStoreFile != null) {\r\n                keyAlias System.getenv(\"APK_SIGNING_KEY_ALIAS\")\r\n                keyPassword System.getenv(\"APK_SIGNING_KEY_PASSWORD\")\r\n                storeFile file(System.getenv(\"APK_SIGNING_STORE_FILE\"))\r\n                storePassword System.getenv(\"APK_SIGNING_STORE_PASSWORD\")\r\n            } else {\r\n                keyAlias 'androiddebugkey'\r\n                keyPassword 'android'\r\n                storeFile rootProject.file('libs/ftc.debug.keystore')\r\n                storePassword 'android'\r\n            }\r\n        }\r\n\r\n        debug {\r\n            keyAlias 'androiddebugkey'\r\n            keyPassword 'android'\r\n            storeFile rootProject.file('libs/ftc.debug.keystore')\r\n            storePassword 'android'\r\n        }\r\n    }\r\n\r\n    aaptOptions {\r\n        noCompress \"tflite\"\r\n    }\r\n\r\n    defaultConfig {\r\n        signingConfig signingConfigs.debug\r\n        applicationId 'com.qualcomm.ftcrobotcontroller'\r\n        minSdkVersion 23\r\n        targetSdkVersion 28\r\n\r\n        /**\r\n         * We keep the versionCode and versionName of robot controller applications in sync with\r\n         * the master information published in the AndroidManifest.xml file of the FtcRobotController\r\n         * module. This helps avoid confusion that might arise from having multiple versions of\r\n         * a robot controller app simultaneously installed on a robot controller device.\r\n         *\r\n         * We accomplish this with the help of a funky little Groovy script that maintains that\r\n         * correspondence automatically.\r\n         *\r\n         * @see <a href=\"http://developer.android.com/tools/building/configuring-gradle.html\">Configure Your Build</a>\r\n         * @see <a href=\"http://developer.android.com/tools/publishing/versioning.html\">Versioning Your App</a>\r\n         */\r\n        def manifestFile = project(':FtcRobotController').file('src/main/AndroidManifest.xml');\r\n        def manifestText = manifestFile.getText()\r\n        //\r\n        def vCodePattern = Pattern.compile(\"versionCode=\\\"(\\\\d+(\\\\.\\\\d+)*)\\\"\")\r\n        def matcher = vCodePattern.matcher(manifestText)\r\n        matcher.find()\r\n        def vCode = Integer.parseInt(matcher.group(1))\r\n        //\r\n        def vNamePattern = Pattern.compile(\"versionName=\\\"(.*)\\\"\")\r\n        matcher = vNamePattern.matcher(manifestText);\r\n        matcher.find()\r\n        def vName = matcher.group(1)\r\n        //\r\n        versionCode vCode\r\n        versionName vName\r\n    }\r\n\r\n    // Advanced user code might just want to use Vuforia directly, so we set up the libs as needed\r\n    // http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.BuildType.html\r\n    buildTypes {\r\n        release {\r\n            signingConfig signingConfigs.release\r\n\r\n            ndk {\r\n                abiFilters \"armeabi-v7a\", \"arm64-v8a\"\r\n            }\r\n        }\r\n        debug {\r\n            debuggable true\r\n            jniDebuggable true\r\n            renderscriptDebuggable true\r\n            ndk {\r\n                abiFilters \"armeabi-v7a\", \"arm64-v8a\"\r\n            }\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_7\r\n        targetCompatibility JavaVersion.VERSION_1_7\r\n    }\r\n\r\n    sourceSets.main {\r\n        jni.srcDirs = []\r\n        jniLibs.srcDir rootProject.file('libs')\r\n    }\r\n    ndkVersion '21.3.6528147'\r\n}\r\n\r\nrepositories {\r\n    flatDir {\r\n        dirs rootProject.file('libs')\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.common.gradle b/build.common.gradle
--- a/build.common.gradle	(revision c3dadd1a220456d866e887745a46564f2a1b5de1)
+++ b/build.common.gradle	(date 1629271875706)
@@ -21,7 +21,7 @@
 
 android {
 
-    compileSdkVersion 29
+    compileSdkVersion 31
 
     signingConfigs {
         release {
@@ -55,7 +55,7 @@
         signingConfig signingConfigs.debug
         applicationId 'com.qualcomm.ftcrobotcontroller'
         minSdkVersion 23
-        targetSdkVersion 28
+        targetSdkVersion 31
 
         /**
          * We keep the versionCode and versionName of robot controller applications in sync with
